version: 2.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run: 
          name: Generate Dependency File
          command: |
            mkdir -p workspace
            mvn dependency:tree -DoutputFile=workspace/maven_dep_tree.txt
            cat workspace/maven_dep_tree.txt
      - persist_to_workspace: 
          root: workspace 
          paths:
            - maven_dep_tree.txt

  scan:
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - attach_workspace: # This step attaches the workspace from the previous job
          at: /tmp/workspace
      - run: 
         name: Semgrep full scan
         command: |
           cp /tmp/workspace/maven_dep_tree.txt .
           semgrep ci
         
workflows:
  version: 2
  build_and_scan:
    jobs:
      - build
      - scan:
          context:
            - semgrep
          requires:
            - build

# version: 2.1

# workflows:
#   version: 2
#   my_workflow:
#     jobs:
#       - build_maven_dependency_tree:
#           context: maven
#       - semgrep-full-scan:
#           requires:
#             - build_maven_dependency_tree
#           filters:
#             branches:
#               only: main
#           context:
#             - semgrep
#       - semgrep-diff-scan:
#           requires:
#             - build_maven_dependency_tree
#           filters:
#             branches:
#               ignore: main
#           context:
#             - semgrep

# jobs:
#   build_maven_dependency_tree:
#     docker:
#       - image: cimg/openjdk:17.0  # Adjust as needed
#     steps:
#       - checkout
#       - run:
#           name: Generate Maven Dependency Tree
#           command: mvn dependency:tree -DoutputFile=maven_dep_tree.txt
#       - persist_to_workspace:
#           root: .  # This saves the current working directory (where maven_dep_tree.txt is generated)
#           paths:
#             - maven_dep_tree.txt  # This is the file we want to persist to the workspace

#   semgrep-full-scan:
#     docker:
#       - image: returntocorp/semgrep
#     steps:
#       - checkout
#       - attach_workspace:
#           at: /workspace  # This attaches the workspace at the specified directory
#       - run:
#           name: "Semgrep full scan with Maven Dependency Tree"
#           command: |
#             # Example command to use maven_dep_tree.txt
#             echo "Checking Maven Dependency Tree file"
#             cat /workspace/maven_dep_tree.txt
#             semgrep ci

#   semgrep-diff-scan:
#     parameters:
#       default_branch:
#         type: string
#         default: main
#     docker:
#       - image: returntocorp/semgrep
#     steps:
#       - checkout
#       - attach_workspace:
#           at: /workspace  # This attaches the workspace at the specified directory
#       - run: 
#           name: Semgrep diff scan
#           environment: 
#             SEMGREP_BASELINE_REF: << parameters.default_branch >>
#           command: |
#             echo "Running semgrep and dumping results to JSON file"
#             export SEMGREP_BASELINE_REF="origin/main"
#             export SEMGREP_COMMIT=$CIRCLE_SHA1
#             export SEMGREP_JOB_URL=$CIRCLE_BUILD_URL
#             echo $CIRCLE_BRANCH
#             git fetch origin "+refs/heads/*:refs/remotes/origin/*"
#             semgrep ci --baseline-commit=$(git merge-base main HEAD) --json --output report-ssc.json
#             json_file=report-ssc.json
#             echo "Iterating through findings"
#             findings=$(jq -r '.results[]' "$json_file")
#             for k in $(jq '.results | keys | .[]' "$json_file"); do
#                 value=$(jq -r ".results[$k]" "$json_file");
#                 echo "$value" > finding_content.json
#                 severity=$(jq -r '.extra.severity' "finding_content.json");
#                 reachable=$(jq -r '.extra.sca_info.reachable' "finding_content.json");
#                 if [[ $severity == "ERROR" && $reachable == "true" ]]; then
#                     echo "Exiting with error code 1"
#                     exit 1;
#                 fi
#             done
#             echo "There are no reachable critical-high findings"
